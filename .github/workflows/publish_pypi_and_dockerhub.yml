name: Publish PyPI release and Docker image

on:
  release:
    types: [published]

jobs:
  # Upload to PyPI
  pypi_upload:
    name: Push new release to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools setuptools_scm wheel twine
      - name: Build and publish to PyPI
        env:
          # Username has to be __token__ to use API key
          TWINE_USERNAME: __token__
          # PyPI API key registered as an action secret for the repo
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine check dist/*
          twine upload --skip-existing dist/*
      - name: Wait for updates
        run: sleep 300s
        shell: bash
  # Build the Docker image with the newly-uploaded openmsistream and upload to DockerHub
  push_to_registry:
    needs: pypi_upload
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          # Username and API key stored as action secrets for the repo
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: openmsi/openmsistream
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./docker/openmsistream
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}