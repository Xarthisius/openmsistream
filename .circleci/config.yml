version: 2.1

################# ORB #################
orbs:
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.1.1

################# WORKFLOWS #################
workflows:
  build_and_test:
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows 
    jobs:
      - build-and-code-check
      - run-tests-no-kafka:
        requires:
          - build-and-code-check
      - run-tests:
        requires:
          - run-tests-no-kafka
      - run-tests-python37:
        requires:
          - run-tests-no-kafka
      - check-repo:
        requires:
          - run-tests
          - run-tests-python37

################# JOBS #################
jobs:
  # Build the repo and check the code using pyflakes and pylint
  build-and-code-check:
    docker:
      - image: openmsi/openmsistream-ci:1.5
    steps:
      - checkout
      - python/install-packages:
        pkg-manager: pip
        args: .[test]
      - run:
        name: code check
        command: |
          cd ~/project
          python -m pyflakes .
          black openmsistream --check
          black test --check
          python -m pylint openmsistream
          python -m pylint --recursive=y test
          cd -
      - persist_to_workspace:
        root: .
        paths:
          - .
  # Run non-Kafka tests, without the environment variables set
  run-tests-no-kafka:
    docker:
      - image: openmsi/openmsistream-ci:1.5
    steps:
      - attach_workspace:
        at: .
      - run:
        name: run "no Kafka" tests
        command: cd ~/project; python test/run_all_tests.py --no_pyflakes --no_formatting --no_pylint --no_kafka
      - persist_to_workspace:
        root: .
        paths:
          - .
  # Run all tests, including those that send messages to the Kafka cluster
  run-tests:
    machine:
      image: ubuntu-2204:current
    parallelism: 15
    resource_class: large
    environment:
      USE_LOCAL_KAFKA_BROKER_IN_TESTS: "yes"
      LOCAL_KAFKA_BROKER_BOOTSTRAP_SERVERS: localhost:9092
    steps:
      - attach_workspace:
        at: .
      - run:
        name: set Python version to 3.9
        command: pyenv global 3.9
      - python/install-packages:
        pkg-manager: pip
        args: .[test]
      - run:
        name: set up local Kafka broker
        command: |
          cd test
          sh start_local_broker.sh
          sh create_local_testing_topics.sh
      - run:
        name: run tests
        command: |
          python --version
          cd test/test_scripts
          TESTCLASSES=$(circleci tests glob "test*.py" | sed -e 's/.py//' | circleci tests split)
          python -m unittest $TESTCLASSES -v
      - run:
        name: shut down local Kafka broker
        command: |
          cd test
          sh stop_local_broker.sh
      - persist_to_workspace:
        root: .
        paths:
          - .
  # Run all tests in the python 3.7 image instead
  run-tests-python37:
    docker:
      - image: openmsi/openmsistream-ci-python37:v1.0
    parallelism: 15
    resource_class: large
    steps:
      - attach_workspace:
          at: .
      - python/install-packages:
          pkg-manager: pip
          args: .[test]
      - run:
          name: run tests
          command: |
            cd test/test_scripts
            TESTCLASSES=$(circleci tests glob "test*.py" | sed -e 's/.py//' | circleci tests split)
            python -m unittest $TESTCLASSES -v
      - persist_to_workspace:
          root: .
          paths:
              - .
  # Make sure that the repository is clean after all tests have been run
  check-repo:
    docker:
      - image: openmsi/openmsistream-ci:1.5
    steps:
      - attach_workspace:
          at: .
      - run:
          name: check repo
          command: cd ~/project; sh test/test_repo_status.sh
