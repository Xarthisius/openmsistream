version: 2.1

################# ORB #################
orbs:
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.1.1

################# WORKFLOWS #################
workflows:
  build_and_test:
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows 
    jobs:
      - build-and-code-check
      - run-tests-no-kafka:
          requires:
            - build-and-code-check
      - run-tests:
          requires:
            - run-tests-no-kafka
      - check-repo:
          requires:
            - run-tests

################# JOBS #################
jobs:
  # Build the repo and check the code using pyflakes and pylint
  build-and-code-check:
    docker:
      - image: openmsi/openmsistream-ci:1.4
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          args: .[test]
      - run:
          name: code check
          command: cd ~/project; python -m pyflakes .; python -m pylint openmsistream; cd -
      - persist_to_workspace:
          root: .
          paths:
            - .
  # Run non-Kafka tests, without the environment variables set
  run-tests-no-kafka:
    docker:
      - image: openmsi/openmsistream-ci:1.4
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - attach_workspace:
          at: .
      - python/install-packages:
          pkg-manager: pip
          args: .[test]
      - run:
          name: run "no Kafka" tests
          command: cd ~/project; python test/run_all_tests.py --no_pyflakes --no_pylint --no_kafka
      - persist_to_workspace:
          root: .
          paths:
              - .
  # Run all tests, including those that send messages to the Kafka cluster
  run-tests:
    docker:
      - image: openmsi/openmsistream-ci:1.4
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    parallelism: 15
    resource_class: large
    steps:
      - attach_workspace:
          at: .
      - python/install-packages:
          pkg-manager: pip
          args: .[test]
      - run:
          name: run tests
          command: |
            cd test/test_scripts
            TESTCLASSES=$(circleci tests glob "test*.py" | sed -e 's/.py//' | circleci tests split)
            python -m unittest $TESTCLASSES -v
      - persist_to_workspace:
          root: .
          paths:
              - .
  # Make sure that the repository is clean after all tests have been run
  check-repo:
    docker:
      - image: openmsi/openmsistream-ci:1.4
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - attach_workspace:
          at: .
      - run:
          name: check repo
          command: cd ~/project; sh test/test_repo_status.sh
